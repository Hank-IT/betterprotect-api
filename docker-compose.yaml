services:
    web:
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
            args:
                FPM_IMAGE: bp-fpm
        image: bp-web
        labels:
            - traefik.http.routers.bp-web.rule=Host(`${APP_DOMAIN}`)
            - "traefik.http.routers.bp-web.tls.certresolver=lets-encrypt"
            - "traefik.http.routers.bp-web.tls=true"
            - "traefik.http.services.bp-web.loadbalancer.server.port=8080"
        environment:
            FPM_SERVICE: fpm
        ports:
            - "8123:80"
        networks:
            - traefik
            - default
        volumes:
            - "./:/var/www/html"
        depends_on:
            - fpm

    fpm:
        build:
            context: .
            dockerfile: ./docker/fpm/Dockerfile
        environment:
            PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
            PHP_OPCACHE_ENABLE: 0
        image: bp-fpm
        user: "${UID:-1000}:${UID:-1000}"
        volumes:
            - "./docker/fpm/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"
            - "./:/var/www/html"
            - "./coverage:/opt/phpstorm-coverage"
        networks:
            - default
        depends_on:
            - database
            - redis
            - websockets

    database:
        image: mariadb:10.10
        ports:
            - "3308:3306"
        environment:
            MARIADB_RANDOM_ROOT_PASSWORD: 'yes'
            MYSQL_DATABASE: ${DB_DATABASE:?err}
            MYSQL_USER: ${DB_USERNAME:?err}
            MYSQL_PASSWORD: ${DB_PASSWORD:?err}
        volumes:
            - "database-storage:/var/lib/mysql"

    scheduler:
        image: bp-fpm
        entrypoint: docker-scheduler-entrypoint
        environment:
            PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
            PHP_OPCACHE_ENABLE: 0
        user: "${UID:-1000}:${UID:-1000}"
        volumes:
            - "./:/var/www/html"

    queue-default:
        image: bp-fpm
        entrypoint: docker-dev-queue-listen-default-entrypoint
        environment:
            PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
            PHP_OPCACHE_ENABLE: 0
        user: "${UID:-1000}:${UID:-1000}"
        volumes:
            - "./:/var/www/html"
        depends_on:
            - fpm

    queue-task:
        image: bp-fpm
        entrypoint: docker-dev-queue-listen-task-entrypoint
        environment:
            PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
            PHP_OPCACHE_ENABLE: 0
        user: "${UID:-1000}:${UID:-1000}"
        volumes:
            - "./:/var/www/html"
        depends_on:
            - fpm

    redis:
        image: redis

    ssh-mx00:
        build:
            context: .
            dockerfile: ./docker/ssh/Dockerfile
        image: bp-ssh
        environment:
            LOCAL_PORT: ${SSH_LOCAL_PORT}
            REMOTE_HOST: ${SSH_REMOTE_HOST}
            REMOTE_PORT: ${SSH_REMOTE_PORT}
            SSH_USER: ${SSH_USER}
            SSH_ID_FILE: /ssh.key
        volumes:
            - ./ssh.key:/ssh.key
        networks:
            - default

    websockets:
        image: quay.io/soketi/soketi:89604f268623cf799573178a7ba56b7491416bde-16-debian
        environment:
            DEBUG: '0'
            SOKETI_DEFAULT_APP_ID: ${WEBSOCKET_APP_ID}
            SOKETI_DEFAULT_APP_KEY: ${WEBSOCKET_APP_KEY}
            SOKETI_DEFAULT_APP_SECRET: ${WEBSOCKET_APP_SECRET}
        networks:
            - default
            - traefik
        labels:
            - traefik.http.routers.bp-soketi.rule=Host(`${APP_DOMAIN}`) && PathPrefix(`/ws`)
            - "traefik.http.routers.bp-soketi.entrypoints=websecure"
            - "traefik.http.routers.bp-soketi.tls=true"
            - "traefik.http.services.bp-soketi.loadbalancer.server.port=6001"
            - "traefik.http.services.bp-soketi.loadbalancer.server.scheme=http"
            - "traefik.http.routers.bp-soketi.middlewares=bp-soketi-stripprefix"
            - "traefik.http.middlewares.bp-soketi-stripprefix.stripprefix.prefixes=/ws"

    opensearch:
        image: opensearchproject/opensearch:2
        restart: always
        container_name: opensearch
        ulimits:
            memlock:
                soft: -1 # Set memlock to unlimited (no soft or hard limit)
                hard: -1
            nofile:
                soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
                hard: 65536
        environment:
            discovery.type: single-node
            node.name: opensearch
            OPENSEARCH_JAVA_OPTS: "-Xms2048m -Xmx4096m"
            OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
        volumes:
            - opensearch-data:/usr/share/opensearch/data
            - ./config.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/config.yml
            - ./internal_users.yml:/usr/share/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml
        ports:
            - 9200:9200
            - 9600:9600
        networks:
            - default

    opensearch-dashboards:
        image: opensearchproject/opensearch-dashboards:2
        container_name: opensearch-dashboards
        restart: always
        ports:
            - 5601:5601
        expose:
            - "5601"
        environment:
            OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
        networks:
            - default
            - traefik
        depends_on:
            - opensearch

volumes:
    database-storage:
    opensearch-data:

networks:
    traefik:
        external: true
    default:
        driver: bridge
